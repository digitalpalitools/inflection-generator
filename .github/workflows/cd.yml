name: Continuous Integration

on:
  push:
    branches: [ master ]

jobs:
  powershell-tests:
    name: PowerShell Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run Pester tests (pwsh)
        run: |
          Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -RequiredVersion 5.0.4 -confirm:$false -Force
          Invoke-Pester -Path ".\scripts" -Output Detailed -CI
        continue-on-error: false
        shell: pwsh

  generate-db:
    name: Generate inflections.db
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: .xlsx -> .csv
        run: |
          python -V
          python ./scripts/xlsx2csv.py 'declensions & conjugations.xlsx' ./build --all
          ls -la ./build
        continue-on-error: false

      - name: Validate stems
        run: |
          ./scripts/Validate-Stems.ps1
        continue-on-error: false
        shell: pwsh

      - name: .csv -> .sql
        run: |
          ./scripts/Generate-SqliteScripts.ps1
        continue-on-error: false
        shell: pwsh

      - name: .sql -> .db
        run: |
          cat ./build/inflections.sql | ./bin/linux/sqlite3
        continue-on-error: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_KSAPPLICATIONS_STORAGE }}

      - name: Deploy
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
              az storage blob upload-batch --account-name ksapplications -d '$web\inflections' -s ./build

      - name: Set cache-control
        run: |
              az storage blob upload --account-name ksapplications --container-name '$web' --name 'inflections/inflections.db' --file ./build/inflections.db --content-cache-control 'no-store max-age=0'

      - name: Azure Logout
        run: |
              az logout

  finish:
    name: Finish
    needs: [ powershell-tests, generate-db ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-ruby@v1
      - name: Notify DPT on Discord
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.DISCORD_DPT_DEPLOYMENT_NOTIFICATIONS_WEBHOOK_URL }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
